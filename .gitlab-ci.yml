stages:
    - setup
    - style
    - quality
    - test
    - package

cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"

variables:
    DOCKER_DRIVER: overlay2
    BASE_SW_VERSION: '6.4.0.0'
    PHP_VERSION: '7.4'
    DOCKWARE_CI: '1'
    COMPOSER_COMMAND: "composer install --prefer-dist --no-ansi --no-interaction --no-progress --optimize-autoloader"

before_script:
    - cp -r ${CI_PROJECT_DIR} /var/www/html/custom/plugins/${CI_PROJECT_NAME}

composer:
    stage: setup
    image: "dockware/dev:${BASE_SW_VERSION}"
    script:
        - cd /var/www/html/custom/plugins/${CI_PROJECT_NAME} && ${COMPOSER_COMMAND} && cp -r /var/www/html/custom/plugins/${CI_PROJECT_NAME}/vendor ${CI_PROJECT_DIR}
    artifacts:
        paths:
            - vendor/
        expire_in: 1 days
        when: always
    cache:
        key: global
        paths:
            - vendor

codestyle:
    stage: style
    image: "dockware/dev:${BASE_SW_VERSION}"
    needs: ["composer"]
    dependencies:
        - composer
    except:
        variables: [ $DISABLE_PHP_CS_FIXER == "1" ]
    script:
        - cd /var/www/html/custom/plugins/${CI_PROJECT_NAME} && ${COMPOSER_COMMAND} && vendor/bin/php-cs-fixer fix -v --dry-run
    cache:
        key: global
        paths:
            - vendor
        policy: pull

phpstan:
    stage: quality
    image: "dockware/dev:${SW_VERSION}"
    parallel:
        matrix:
            -   PHP_VERSION: [ "7.4", "8.0" ]
                SW_VERSION: [ "6.4.0.0", "6.4.1.0", "6.4.2.0", "6.4.3.0", "6.4.4.0", "6.4.5.0", "6.4.6.0", "6.4.7.0", "6.4.8.0", "6.4.9.0", "6.4.10.0", "6.4.11.0", "6.4.12.0", "latest" ]
    needs: ["composer"]
    dependencies:
        - composer
    except:
        variables: [ $DISABLE_PHPSTAN == "1" ]
    script:
        - cd /var/www/html/custom/plugins/${CI_PROJECT_NAME} && vendor/bin/phpstan analyse -c phpstan.neon -a vendor/autoload.php -a ../../../vendor/autoload.php src tests
    cache:
        key: global
        paths:
            - vendor
        policy: pull

phpunit:
    stage: test
    image: "dockware/dev:${SW_VERSION}"
    parallel:
        matrix:
            -   PHP_VERSION: [ "7.4", "8.0" ]
                SW_VERSION: [ "6.4.0.0", "6.4.1.0", "6.4.2.0", "6.4.3.0", "6.4.4.0", "6.4.5.0", "6.4.6.0", "6.4.7.0", "6.4.8.0", "6.4.9.0", "6.4.10.0", "6.4.11.0", "6.4.12.0", "latest" ]
    needs: ["composer"]
    dependencies:
        - composer
    except:
        variables: [ $DISABLE_PHPUNIT == "1" ]
    script:
        - cd /var/www/html && php bin/console plugin:refresh
        - cd /var/www/html && php bin/console plugin:install --clearCache --activate ${CI_PROJECT_NAME}
        - "cd /var/www/html/custom/plugins/${CI_PROJECT_NAME} && php -d pcov.enabled=1 -d pcov.directory=${CI_PROJECT_DIR}
            vendor/bin/phpunit
            --configuration custom/plugins/${CI_PROJECT_NAME}/phpunit.xml.dist
            --log-junit ${CI_PROJECT_DIR}/phpunit.junit.xml
            --colors=never
            --coverage-clover ${CI_PROJECT_DIR}/phpunit.clover.xml
            --coverage-html ${CI_PROJECT_DIR}/phpunit-coverage-html
            --coverage-text"
    coverage: '/^\s*Lines:\s*(\d+(?:\.\d+)?%)/'
    artifacts:
        paths:
            - ${CI_PROJECT_DIR}/phpunit.clover.xml
        reports:
            junit: ${CI_PROJECT_DIR}/phpunit.junit.xml
    cache:
        key: global
        paths:
            - vendor
        policy: pull

install:
    stage: test
    image: "dockware/dev:${SW_VERSION}"
    parallel:
        matrix:
            -   PHP_VERSION: [ "7.4", "8.0" ]
                SW_VERSION: [ "6.4.0.0", "6.4.1.0", "6.4.2.0", "6.4.3.0", "6.4.4.0", "6.4.5.0", "6.4.6.0", "6.4.7.0", "6.4.8.0", "6.4.9.0", "6.4.10.0", "6.4.11.0", "6.4.12.0", "latest" ]
    needs: ["composer"]
    dependencies:
        - composer
    except:
        variables: [ $DISABLE_INSTALL == "1" ]
    script:
        - cd /var/www/html && php bin/console plugin:refresh
        - cd /var/www/html && php bin/console plugin:install --clearCache --activate ${CI_PROJECT_NAME}
        - cd /var/www/html && php bin/console plugin:list
    cache:
        key: global
        paths:
            - vendor
        policy: pull

build:pack-plugin:
    stage: package
    image:
        name: ghcr.io/friendsofshopware/platform-plugin-dev:${BASE_SW_VERSION}
        entrypoint: [""]
    only:
        - tags
        - master
        - /^integration.*$/
        - /^fix.*$/
    needs: []
    dependencies: []
    except:
        variables: [ $DISABLE_PACKAGE == "1" ]
    script:
        - start-mysql
        - ln -s "$(pwd)" "/plugins/${CI_PROJECT_NAME}"
        - plugin-uploader ext:prepare "/plugins/${CI_PROJECT_NAME}"
        - rm -rf $( cat .sw-zip-blocklist ) && rm -rf .sw-zip-blocklist
        - pack-plugin ${CI_PROJECT_NAME}
        - plugin-uploader ext:validate "$(realpath "${CI_PROJECT_NAME}.zip")"
    artifacts:
        paths:
            - "${CI_PROJECT_NAME}.zip"
        expire_in: 1 week
    cache:
        key: global
        paths:
            - vendor
        policy: pull
